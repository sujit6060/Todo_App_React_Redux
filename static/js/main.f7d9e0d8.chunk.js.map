{"version":3,"sources":["Reducer/login.js","Components/Login.js","Reducer/index.js","Components/Show.js","Components/Todo.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["loginSlice","createSlice","name","initialState","user","reducers","addlogin","state","action","push","payload","actions","Login","dispatch","useDispatch","NavigateToNext","useHistory","useState","input","setinput","className","style","width","border","padding","backgroundColor","color","borderRadius","Form","Card","Header","textAlign","fontSize","fontFamily","fontWeight","Field","placeholder","onChange","event","target","value","type","id","required","Button","onClick","todoSlice","addtask","deletetask","filter","completetask","index","findIndex","task","completed","Show","useSelector","TODO","map","txt","Box","sx","flexGrow","paddingLeft","Grid","container","spacing","item","xs","List","Item","Avatar","bgcolor","green","red","Todo","LOGIN","setTask","height","InputGroup","FormControl","inverted","Date","now","toString","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7d9e0d8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  user: [],\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState,\r\n  reducers: {\r\n    addlogin: function (state, action) {\r\n      state.user.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addlogin } = loginSlice.actions;\r\nexport default loginSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { addlogin } from \"../Reducer/login\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const NavigateToNext = useHistory();\r\n  const [input, setinput] = useState([]);\r\n  const handler = (event) => {\r\n    setinput(event.target.value);\r\n  };\r\n\r\n  const getData = () => {\r\n    dispatch(addlogin(input));\r\n    if (input > \"0\") {\r\n      NavigateToNext.push(\"/todo\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          width: \"375px\",\r\n          border: \"2px solid black\",\r\n          padding: \"30px\",\r\n          backgroundColor: \"black\",\r\n          color: \"white\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Form>\r\n          <Card.Header\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: \"30px\",\r\n              fontFamily: \"Times New Roman', Times, serif\",\r\n              fontWeight: \"bolder\",\r\n            }}\r\n          >\r\n            LOGIN\r\n          </Card.Header>\r\n\r\n          <br></br>\r\n          <Form.Field>\r\n            <label style={{ color: \"white\" }}>UserName</label>\r\n            <input\r\n              placeholder=\"Enter Your Username\"\r\n              onChange={handler}\r\n              type=\"text\"\r\n              id=\"username\"\r\n              required\r\n              style={{ borderRadius: \"10px\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label style={{ color: \"white\" }}>Password</label>\r\n            <input\r\n              placeholder=\"Enter Your Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              style={{ borderRadius: \"10px\" }}\r\n            />\r\n          </Form.Field>\r\n\r\n          <br></br>\r\n          <br></br>\r\n          <Button type=\"submit\" onClick={getData} style={{ color: \"black\" }}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"TODO\",\r\n  initialState: [],\r\n  reducers: {\r\n    addtask: function (state, action) {\r\n      state.push(action.payload);\r\n    },\r\n    deletetask: function (state, action) {\r\n      return state.filter(({ id }) => id !== action.payload);\r\n    },\r\n    completetask: function (state, action) {\r\n      const index = state.findIndex((task) => task.id === action.payload.id);\r\n      state[index].completed = action.payload.completed;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addtask, deletetask, completetask } = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { List } from \"semantic-ui-react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport { deletetask, completetask } from \"../Reducer\";\r\n\r\nconst Show = () => {\r\n  const state = useSelector((state) => state.TODO);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {state.map(({ txt, id, completed }) => (\r\n        <>\r\n          <Box\r\n            sx={{ flexGrow: 1 }}\r\n            style={{\r\n              paddingLeft: \"10px\",\r\n              padding: \"15px\",\r\n              fontSize: \"25px\",\r\n              fontFamily: \"Times New Roman', Times, serif\",\r\n              fontWeight: \"bolder\",\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <Grid container spacing={2} key={id} id={id}>\r\n              <Grid item xs={8}>\r\n                <List>\r\n                  <List.Item className={`list ${completed ? \"complete\" : \"\"}`}>\r\n                    {txt}{\" \"}\r\n                  </List.Item>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Avatar\r\n                  sx={{ bgcolor: green[500] }}\r\n                  className=\"btn btn\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      completetask({\r\n                        id: id,\r\n                        completed: !completed,\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  <DoneIcon />\r\n                </Avatar>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Avatar\r\n                  sx={{ bgcolor: red[500] }}\r\n                  className=\"btn btn\"\r\n                  onClick={() => dispatch(deletetask(id))}\r\n                >\r\n                  {\" \"}\r\n                  <DeleteIcon />\r\n                </Avatar>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>{\" \"}\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoginIcon from \"@mui/icons-material/Login\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { addtask } from \"../Reducer\";\r\nimport Show from \"./Show\";\r\n\r\nconst Todo = () => {\r\n  const state = useSelector((state) => state.LOGIN);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const handler = (event) => {\r\n    setTask(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            width: \"360px\",\r\n            backgroundColor: \"black\",\r\n            border: \"5px solid black\",\r\n            color: \"white\",\r\n            borderRadius: \"20px\",\r\n            padding: \"20px\",\r\n            height: \"600px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <h2 style={{ paddingLeft: \"200px\" }}>\r\n              <LoginIcon /> . {state.user}\r\n            </h2>\r\n            <br></br>\r\n            <InputGroup\r\n              className=\"mb-3\"\r\n              style={{\r\n                width: \"300px\",\r\n                paddingLeft: \"10px\",\r\n              }}\r\n            >\r\n              <FormControl\r\n                placeholder=\"Add Here What TODO...\"\r\n                onChange={handler}\r\n                value={task}\r\n                name=\"task \"\r\n              />\r\n\r\n              <Button\r\n                inverted\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  dispatch(\r\n                    addtask({\r\n                      txt: task,\r\n                      id: Date.now().toString(),\r\n                      completed: false,\r\n                    })\r\n                  );\r\n                  setTask(\"\");\r\n                }}\r\n              >\r\n                ADDTASK\r\n              </Button>\r\n            </InputGroup>\r\n          </div>\r\n          <br></br>\r\n          <Show />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport Todo from \"./Components/Todo\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/Todo_App_React_Redux\">\n        <Login />\n      </Route>\n      <Switch>\n        <Route path=\"/todo\">\n          <Todo />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loginSlice from \"../Reducer/login\";\r\nimport todoSlice from \"../Reducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    LOGIN: loginSlice,\r\n    TODO: todoSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}